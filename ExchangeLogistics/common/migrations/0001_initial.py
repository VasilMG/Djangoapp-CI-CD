# Generated by Django 4.1.7 on 2023-08-08 20:57

import ExchangeLogistics.exchange.validators
import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AboutData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('history', models.TextField(verbose_name='History')),
                ('exchange_introduction', models.TextField(verbose_name='Exchange intro')),
                ('support_text', models.TextField(blank=True, null=True)),
                ('support_email', models.EmailField(max_length=254, validators=[django.core.validators.EmailValidator])),
                ('support_phone_number', models.CharField(max_length=100, validators=[ExchangeLogistics.exchange.validators.phone_number_validator])),
            ],
            options={
                'verbose_name_plural': 'About Data',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(max_length=50, validators=[ExchangeLogistics.exchange.validators.name_validator], verbose_name='Country')),
                ('city', models.CharField(max_length=50, validators=[ExchangeLogistics.exchange.validators.name_validator], verbose_name='City')),
                ('address', models.CharField(max_length=200, verbose_name='Address')),
                ('contact_email', models.EmailField(max_length=254, verbose_name='Email')),
                ('phone_number', models.CharField(max_length=25, validators=[ExchangeLogistics.exchange.validators.phone_number_validator], verbose_name='Phone number')),
            ],
        ),
        migrations.CreateModel(
            name='PrimaryService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_type', models.CharField(max_length=100, verbose_name='Service Type')),
                ('short_text', models.CharField(max_length=300, verbose_name='Short Text')),
                ('long_text', models.TextField(verbose_name='Long text')),
                ('contact_person', models.CharField(max_length=200, validators=[ExchangeLogistics.exchange.validators.name_validator], verbose_name='Contact person')),
                ('general_email', models.EmailField(max_length=254, verbose_name='Email')),
                ('phone_number', models.CharField(max_length=25, validators=[ExchangeLogistics.exchange.validators.phone_number_validator], verbose_name='Phone number')),
                ('background_picture', models.ImageField(upload_to='service_images', verbose_name='Slide picture')),
            ],
        ),
        migrations.CreateModel(
            name='SecondaryService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_type', models.CharField(max_length=100, verbose_name='Service type')),
                ('short_text', models.CharField(max_length=300, verbose_name='Short text')),
                ('long_text', models.TextField(verbose_name='Long text')),
                ('contact_person', models.CharField(max_length=200, validators=[ExchangeLogistics.exchange.validators.name_validator], verbose_name='Contact person')),
                ('general_email', models.EmailField(max_length=254, verbose_name='Email')),
                ('phone_number', models.CharField(max_length=25, validators=[ExchangeLogistics.exchange.validators.phone_number_validator], verbose_name='Phone number')),
                ('icon', models.ImageField(upload_to='icons', verbose_name='Icon')),
            ],
            options={
                'verbose_name_plural': 'Secondary Services',
            },
        ),
    ]
